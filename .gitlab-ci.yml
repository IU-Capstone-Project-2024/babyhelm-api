stages:
  - build
  - test
  - deploy

variables:
  IMAGE_NAME: "registry.gitlab.com/babyhelm/babyhelm"


build-dev:
  stage: build
  image: docker:dind
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  services:
    - docker:dind
  script:
    - docker info
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHORT_SHA-dev .
    - docker push $IMAGE_NAME:$CI_COMMIT_SHORT_SHA-dev

test-dev:
  stage: test
  image:
    name: $IMAGE_NAME:$CI_COMMIT_SHORT_SHA-dev
    entrypoint: [ "" ]
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - pip install tox
    - tox

release:
  stage: build
  image: docker:dind
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
  services:
    - docker:dind
  script:
    - docker info
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t $IMAGE_NAME:latest .
    - docker push $IMAGE_NAME:latest

test-release:
    stage: test
    image:
        name: $IMAGE_NAME:latest
        entrypoint: [ "" ]
    rules:
        - if: $CI_COMMIT_BRANCH == 'main'
    script:
        - pip install tox
        - tox

deploy:
  stage: deploy
  image:
    name: alpine/helm
    entrypoint: [ "" ]
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  before_script:
    - export KUBECONF_ENCODED=$(echo $DEV_CLUSTER_KUBECONFIG | base64)
  script:
    - helm upgrade --install babyhelm config/babyhelm --namespace=babyhelm --kubeconfig $DEV_CLUSTER_KUBECONFIG --set env.database_url=$DATABASE_URL --set env.kubeconf_b64=$KUBECONF_ENCODED
