.stage:
  image: "python:3.11"

stages:
  - build
  - test
  - deploy

variables:
  IMAGE_NAME: "registry.gitlab.com/babyhelm/babyhelm"

default:
  before_script:
    - python -V
    - pip install -U pip poetry virtualenv
    - virtualenv .venv
    - source .venv/bin/activate

test:
  stage: test
  extends: ".stage"
  before_script:
    - !reference [ default, before_script ]
  script:
    - pip install tox
    - tox

build-dev:
  stage: build
  image: docker:dind
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  services:
    - docker:dind
  script:
    - docker info
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHORT_SHA-dev .
    - docker push $IMAGE_NAME:$CI_COMMIT_SHORT_SHA-dev


release:
  stage: build
  image: docker:dind
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
  services:
    - docker:dind
  script:
    - docker info
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t $IMAGE_NAME:latest .
    - docker push $IMAGE_NAME:latest

deploy:
  stage: deploy
  image:
    name: alpine/helm
    entrypoint: [ "" ]
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - helm upgrade --install babyhelm config/babyhelm --namespace=babyhelm --kubeconfig $DEV_CLUSTER_KUBECONFIG --set env.database_url=$DATABASE_URL
